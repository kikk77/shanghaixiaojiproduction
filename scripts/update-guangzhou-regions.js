const { db } = require('../config/database');

/**
 * Êõ¥Êñ∞Âú∞Âå∫Êï∞ÊçÆ‰∏∫ÂπøÂ∑ûÁöÑÂú∞Âå∫
 */
async function updateGuangzhouRegions() {
    console.log('üîÑ ÂºÄÂßãÊõ¥Êñ∞Âú∞Âå∫Êï∞ÊçÆ‰∏∫ÂπøÂ∑ûÂú∞Âå∫...');
    
    try {
        // ÂπøÂ∑ûÂú∞Âå∫Êï∞ÊçÆ
        const guangzhouRegions = [
            { id: 1, name: 'Â§©Ê≤≥Âå∫', sort_order: 1 },
            { id: 2, name: 'Ë∂äÁßÄÂå∫', sort_order: 2 },
            { id: 3, name: 'Êµ∑Áè†Âå∫', sort_order: 3 },
            { id: 4, name: 'ËçîÊπæÂå∫', sort_order: 4 },
            { id: 5, name: 'ÁôΩ‰∫ëÂå∫', sort_order: 5 },
            { id: 6, name: 'ÈªÑÂüîÂå∫', sort_order: 6 },
            { id: 7, name: 'Áï™Á¶∫Âå∫', sort_order: 7 },
            { id: 8, name: 'Ëä±ÈÉΩÂå∫', sort_order: 8 },
            { id: 9, name: 'ÂçóÊ≤ôÂå∫', sort_order: 9 },
            { id: 10, name: '‰ªéÂåñÂå∫', sort_order: 10 },
            { id: 11, name: 'Â¢ûÂüéÂå∫', sort_order: 11 }
        ];
        
        // Ê£ÄÊü•Áé∞ÊúâÂú∞Âå∫
        const existingRegions = db.prepare('SELECT * FROM regions ORDER BY id').all();
        console.log('ÂΩìÂâçÂú∞Âå∫Êï∞ÊçÆ:', existingRegions.map(r => `${r.id}: ${r.name}`));
        
        // Êõ¥Êñ∞Âú∞Âå∫ÂêçÁß∞
        const updateRegion = db.prepare('UPDATE regions SET name = ?, sort_order = ? WHERE id = ?');
        
        for (const region of guangzhouRegions) {
            const existing = existingRegions.find(r => r.id === region.id);
            if (existing) {
                updateRegion.run(region.name, region.sort_order, region.id);
                console.log(`‚úÖ Êõ¥Êñ∞Âú∞Âå∫ ID ${region.id}: ${existing.name} -> ${region.name}`);
            } else {
                // Â¶ÇÊûú‰∏çÂ≠òÂú®ÔºåÂàôÊèíÂÖ•Êñ∞Âú∞Âå∫
                const insertRegion = db.prepare('INSERT INTO regions (id, name, sort_order, active) VALUES (?, ?, ?, 1)');
                insertRegion.run(region.id, region.name, region.sort_order);
                console.log(`‚úÖ ÂàõÂª∫Âú∞Âå∫ ID ${region.id}: ${region.name}`);
            }
        }
        
        // Âà†Èô§Â§ö‰ΩôÁöÑÂú∞Âå∫ÔºàÂ¶ÇÊûúÊúâÔºâ
        const maxId = Math.max(...guangzhouRegions.map(r => r.id));
        const extraRegions = existingRegions.filter(r => r.id > maxId);
        
        if (extraRegions.length > 0) {
            console.log(`ÂèëÁé∞ ${extraRegions.length} ‰∏™Â§ö‰ΩôÁöÑÂú∞Âå∫ÔºåÈúÄË¶ÅÊ£ÄÊü•ÊòØÂê¶ÂèØ‰ª•Âà†Èô§...`);
            
            for (const region of extraRegions) {
                // Ê£ÄÊü•ÊòØÂê¶ÊúâÂïÜÂÆ∂‰ΩøÁî®Ëøô‰∏™Âú∞Âå∫
                const merchantCount = db.prepare('SELECT COUNT(*) as count FROM merchants WHERE region_id = ?').get(region.id);
                
                if (merchantCount.count === 0) {
                    db.prepare('DELETE FROM regions WHERE id = ?').run(region.id);
                    console.log(`‚úÖ Âà†Èô§Êú™‰ΩøÁî®ÁöÑÂú∞Âå∫ ID ${region.id}: ${region.name}`);
                } else {
                    console.log(`‚ö†Ô∏è  ‰øùÁïôÂú∞Âå∫ ID ${region.id}: ${region.name} (Êúâ ${merchantCount.count} ‰∏™ÂïÜÂÆ∂‰ΩøÁî®)`);
                }
            }
        }
        
        // È™åËØÅÊõ¥Êñ∞ÁªìÊûú
        const updatedRegions = db.prepare('SELECT * FROM regions ORDER BY id').all();
        console.log('\n=== Êõ¥Êñ∞ÂêéÁöÑÂú∞Âå∫Êï∞ÊçÆ ===');
        updatedRegions.forEach(region => {
            console.log(`ID ${region.id}: ${region.name} (ÊéíÂ∫è: ${region.sort_order})`);
        });
        
        // È™åËØÅÂïÜÂÆ∂Âú∞Âå∫ÂÖ≥ËÅî
        const merchantRegions = db.prepare(`
            SELECT m.id, m.teacher_name, m.region_id, r.name as region_name
            FROM merchants m
            LEFT JOIN regions r ON m.region_id = r.id
            ORDER BY m.id
        `).all();
        
        console.log('\n=== ÂïÜÂÆ∂Âú∞Âå∫ÂÖ≥ËÅîÈ™åËØÅ ===');
        merchantRegions.forEach(merchant => {
            console.log(`ÂïÜÂÆ∂ ${merchant.teacher_name} (ID: ${merchant.id}) -> ${merchant.region_name}`);
        });
        
        console.log('\nüéâ ÂπøÂ∑ûÂú∞Âå∫Êï∞ÊçÆÊõ¥Êñ∞ÂÆåÊàêÔºÅ');
        
    } catch (error) {
        console.error('‚ùå Êõ¥Êñ∞Âú∞Âå∫Êï∞ÊçÆÂ§±Ë¥•:', error);
        throw error;
    }
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨
if (require.main === module) {
    updateGuangzhouRegions().then(() => {
        console.log('\n‚úÖ ÂπøÂ∑ûÂú∞Âå∫Êï∞ÊçÆÊõ¥Êñ∞ÂÆåÊàê');
        process.exit(0);
    }).catch(error => {
        console.error('‚ùå Êõ¥Êñ∞Â§±Ë¥•:', error);
        process.exit(1);
    });
}

module.exports = { updateGuangzhouRegions }; 